---
layout: post
title:  "一条咸鱼的IT反思"
date:   2018-07-12 21:28:09 +1000
categories: self
---

突然反思的原因是大概是我终于接受了一个事实。这个 Master of IT，它并不负责教你编程，或者说，programming 并不是这其中最重要的部分。而 Information technology，这个学校对它定位非常准确，就像小学的信息技术课一样，这个比喻的意义在于，像信息技术，而并不是说像小学水平。就像小学时候我们都把这门课程称为电脑课而非信息技术课一样，因为那时我们还并不了解什么是信息技术。

现在了解了吗？当然没有。信息技术怎么可能通过一门编程语言的基础，仅仅讲述数据库、计算机网络与操作系统的概念了解到。小时候大概每个人都会被讲，要知其然并知其所以然。但一个令人沮丧的事实是，用短短的一学期，就了解完那些世界上最聪明的人在 60 年内作出的决定，早已变得天方夜谭。正如庞加莱被称为数学界的最后一个全才，我们绝大多数人，99.9999%，后面可能还有无数个 9 的人，都不得不，从某个抽象层级开始，向上或者向下，去了解一个领域的一部分内容，了解我们的前人为什么会做出这样的决定，了解我们为什么不得不使用它，而不使用它又会有什么严重的后果。

如果有一起上课的同学看到这里，你可以把我们在过去一学期里的学习的 Java 想像成，一门在教你如何使用 Photoshop 的课。在课上，我们学到了很多操作，毫无疑问能用这些操作实现很多令人惊叹的效果，但是，使用这些效果并不能帮你写出另一款图像处理软件。就像学习 Java 语法，不可能进行 JVM 调优，也不可能在 JVM 上构建出另一门语言，更不可能构建出另一个 JVM。而不得不去说的是，Java 本身，并不是一门对开发者很友好的语言。并不真实的泛型，无法被重载的静态方法，事件的缺乏，虽然有很多非常成熟的 workaround，但用起来都让人觉得隔靴搔痒。Java 最吸引人的点，莫过于极度优化的 JVM，也难怪大家会在 JVM 上争相开发新的语言。但从另一方面来说，实现这些令人惊叹的效果，并不比另一款图像处理软件的价值低。而我们只是恰好，用了编程语言这种界面，而为什么没有图形化界面，我想没有人会喜欢用裁剪报纸上的字块来完成一片文章。

用 Photoshop，能意识到我们抽象层级的下界。而想像成咿咿呀呀学习一门全新的自然语言，则可以帮助了解我们抽象层级的上界。我们只是学习了一门语言的语法，我们并不知道如何用这种语言写出优美的文章，也不知道该在什么时候用上这门语言的祖先们早已为我们创造好的常用法与谚语，更不知道如何协调好几十个，甚至几百个对这种语言掌握水平不一的人，一起协同完成一本书。我们还要了解到，如何避开这种语言容易表达不清的地方，比如，一个半小时，究竟是 30 分钟还是 90 分钟，以及，如何用这门语言改造自己，让它变得更容易表达。

初学编程界流行着一个话叫，学习第 n 门语言所花的时间是你学习第 n - 1 门的一半。然而这句话忽略了一个前提，即你对编程范式已经有了一幅图景。让一个命令式语言爱好者去学习 monad，他大概会像捡到一把外星武器一样心生疑惑。虽然这句话的初衷毋庸置疑而且非常励志，见得多才能学得快。

而要说明的是，学习编程语言依然不是学习编程。关于 programming，2016 年，Hacker news 上有篇 poster，讲 Sussman 为什么不在 MIT 继续教 SICP 了。Sussman 说，在八九十年代，工程师们通常通过构建简单易懂的部分，来完成一个复杂的系统。而今天，programming 更像一种 science。从这个试管里抓一个 library，和另一个 library 混合，然后看是否能达到你想要的效果。Nowadays we do programming by poking，更有甚者，do programming by npm install。

这也是我来读这个 master 的原因。